import{_ as a,c as s,a0 as t,o as e}from"./chunks/framework.p2VkXzrt.js";const c=JSON.parse('{"title":"How to Write content in Markdown","description":"","frontmatter":{},"headers":[],"relativePath":"guides/writing.md","filePath":"guides/writing.md"}'),n={name:"guides/writing.md"};function l(o,i,d,r,h,k){return e(),s("div",null,i[0]||(i[0]=[t('<h1 id="how-to-write-content-in-markdown" tabindex="-1">How to Write content in Markdown <a class="header-anchor" href="#how-to-write-content-in-markdown" aria-label="Permalink to &quot;How to Write content in Markdown&quot;">​</a></h1><h3 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h3><ul><li>Brief overview of Rustic&#39;s Markdown support.</li><li>Emphasize simplicity and compatibility with standard Markdown.</li></ul><h3 id="supported-markdown-syntax" tabindex="-1">Supported Markdown Syntax <a class="header-anchor" href="#supported-markdown-syntax" aria-label="Permalink to &quot;Supported Markdown Syntax&quot;">​</a></h3><ul><li><strong>Headers</strong>: <code>#</code>, <code>##</code>, <code>###</code> for heading levels.</li><li><strong>Emphasis</strong>: <code>*italic*</code>, <code>**bold**</code>, <code>~~strikethrough~~</code>.</li><li><strong>Lists</strong>: Ordered (<code>1. Item</code>) and unordered (<code>- Item</code>).</li><li><strong>Links and Images</strong>: <code>[Link](url)</code> and <code>![Image](url)</code>.</li><li><strong>Code Blocks</strong>: ```rust`, ```html`, etc.</li></ul><h3 id="metadata-files" tabindex="-1">Metadata Files <a class="header-anchor" href="#metadata-files" aria-label="Permalink to &quot;Metadata Files&quot;">​</a></h3><ul><li>Explain the role of <code>meta.yaml</code> in organizing content.</li><li>Example <code>meta.yaml</code> file:<div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;title&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My Blog Post&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Jane Doe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2024-11-24&quot;</span></span></code></pre></div></li><li>How <code>meta.yaml</code> enhances content generation (e.g., automatic title tags).</li></ul><h3 id="advanced-features" tabindex="-1">Advanced Features <a class="header-anchor" href="#advanced-features" aria-label="Permalink to &quot;Advanced Features&quot;">​</a></h3><ul><li>Adding inline HTML for custom styling.</li><li>Tips for managing media (e.g., embedding images or videos).</li></ul><h3 id="example-markdown-file" tabindex="-1">Example Markdown File <a class="header-anchor" href="#example-markdown-file" aria-label="Permalink to &quot;Example Markdown File&quot;">​</a></h3><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># Welcome to My Rustic Site</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">This is a </span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;">**bold**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> statement, and this is </span><span style="--shiki-light:#24292E;--shiki-light-font-style:italic;--shiki-dark:#E1E4E8;--shiki-dark-font-style:italic;">*italicized*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text.</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## Things I Love</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Coding</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Writing</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rustic!</span></span></code></pre></div><hr>',12)]))}const g=a(n,[["render",l]]);export{c as __pageData,g as default};
